<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>MIIEpQIBAAKCAQEAxifR5LxMCcObys4FNSGmDP1/fgnFbA3AbdTmUr1jQ8GFI3sP
lXfcgoIa/YmKMVUyW42E/Q+v4YWSurzkYOMaf+iQVdbPTXGU3+MREWPPiE033yqO
b9kfpaE7jlkIPEAj36+rDxyDY51GLnpVommtA6YsfDMXmR7xT7CUpztuiG4Dbgsv
oduZA5EweIYrY4KEyi+2hh1xCnutHk5qv9XQp6GDzQEWxyFI4ARGzv6w5aNudBD+
X3vcoAcAc80jmd4DAEB+IWmpac3Zk+UdeU+L/IVDEtL2aKvqfE/N3JJ9QVf6e5bS
m8Sq5kG5X/Xfup75i7qL+E0zPxG73RhnF0IfzQIDAQABAoIBAQCmoPmJhSXT2B97
zP7oDOGbbtf03rabBH1aXntH/GYqpeMVUPhr0h0lyc50gWIp1eDAyCKawsQ9upsG
WK0bJB42jRRCep5cGzT7h+/kVbBAh96B1UFtoIFSQGDadNfOAomoIgqQbIO4Eprf
npPAPWj19pjV4AjqA/Eb9/spHXr3UUA5DUZhxMxHK3BqtmGwW3zDHBOSNCHNzyKE
0Z7i83zb0gQLLie7htI0zRjmQ4G6a5u3HkmrYZhGnCsEEtD1A2Igz6tCxqucRV0T
jQHzK6I47qklbJvNdFn6EmuxP77qDp7tLznCFnaHCa5HBlUFOA1eDa5zrOVwZ5p0
HbG2fCdBAoGBAO6SomipicvWxP1tceAbRZq/yVrlFXNx9IUfW1dEK9ejgNTAICeb
9BlLPp5tPsNZIV94aOM/dmfJXcU+AyOlxaJcAy3CH3McLAa0ddju1NgANI8kSTGy
Uo4pg7s3AG8ciLv34UyXqn6/SIfdjG4yxBT1FERMowyXKlGf2QBtUv7VAoGBANSh
X7GY04GM5maKNPeIuinmm+CcsaUC1bvdJmXzx3rydlyLhqUUDMNit9NYGFFgL6RL
9ry3aeENrWnr8ukSXxUP9sLw03fjzwZr7OMVKSKdR0ztcWmLUvGLrlzl5o+boyf6
A4NQ0B1t2YjWQYM9kCqoMcZNnq5r3SUegTJ8yskZAoGBAKadjgNedDgB9G2xo9gJ
8+CRlMSAPSz1JvpZ3ebiW2QscmsjCtHe3ulTXZYzYaP4eZA9fbNHvR/ayDxahMK+
oXo0nJu2eVRhFnZQTgWFNuzrp8lYZC3rBjD22WNElG8FFJGCGrztJ0uBt9v7ZHoJ
xluElfTlOPIwGIQNCPZ9Y3tJAoGAGvy4ZpQdFC5L9+vGuTwzVKoeUq3Qpj7r3cI9
42bDhMlNWIWk+0LGM+5Nopdlzr5EjbfOgzlMSPIxdmYqGIbqZoP2L9vdGzRgzFHa
aSAAbpJDwHHKmTjDuECgSs4rK0L3vFUxKPOS1olguMto2T1xFNjwKFklsMGj+dgb
Ucsg+dECgYEAgr0o1YIL9ASM6sXkddnMtnMFZSev5PypsVRF/bvunD+2aPMko14W
edpI2u2WjnM1H9KkoXtI3K/kJk7yXWLNxuCb1vdhtmWNis3gVPA4JbX8PruOsSWM
K2nASm/oE9EXbB/AEG1cw75iFWUS2T9B0pUaebH4y8qyfUq3Ts//Kak=</value>
  </data>
</root>